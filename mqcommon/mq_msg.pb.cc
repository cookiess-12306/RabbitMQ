// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mq_msg.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "mq_msg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace bitmq {
class BasicPropertiesDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BasicProperties> {
} _BasicProperties_default_instance_;
class Message_PayloadDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Message_Payload> {
} _Message_Payload_default_instance_;
class MessageDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Message> {
} _Message_default_instance_;

namespace protobuf_mq_5fmsg_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[3];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicProperties, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicProperties, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicProperties, delivery_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicProperties, routing_key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message_Payload, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message_Payload, properties_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message_Payload, body_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message_Payload, valid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, payload_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, length_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(BasicProperties)},
  { 7, -1, sizeof(Message_Payload)},
  { 14, -1, sizeof(Message)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_BasicProperties_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Message_Payload_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Message_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "mq_msg.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace

void TableStruct::Shutdown() {
  _BasicProperties_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _Message_Payload_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _Message_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _BasicProperties_default_instance_.DefaultConstruct();
  _Message_Payload_default_instance_.DefaultConstruct();
  _Message_default_instance_.DefaultConstruct();
  _Message_Payload_default_instance_.get_mutable()->properties_ = const_cast< ::bitmq::BasicProperties*>(
      ::bitmq::BasicProperties::internal_default_instance());
  _Message_default_instance_.get_mutable()->payload_ = const_cast< ::bitmq::Message_Payload*>(
      ::bitmq::Message_Payload::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\014mq_msg.proto\022\005bitmq\"^\n\017BasicProperties"
      "\022\n\n\002id\030\001 \001(\t\022*\n\rdelivery_mode\030\002 \001(\0162\023.bi"
      "tmq.DeliveryMode\022\023\n\013routing_key\030\003 \001(\t\"\246\001"
      "\n\007Message\022\'\n\007payload\030\001 \001(\0132\026.bitmq.Messa"
      "ge.Payload\022\016\n\006offset\030\002 \001(\r\022\016\n\006length\030\003 \001"
      "(\r\032R\n\007Payload\022*\n\nproperties\030\001 \001(\0132\026.bitm"
      "q.BasicProperties\022\014\n\004body\030\002 \001(\t\022\r\n\005valid"
      "\030\003 \001(\t*A\n\014ExchangeType\022\016\n\nUNKNOWTYPE\020\000\022\n"
      "\n\006DIRECT\020\001\022\n\n\006FANOUT\020\002\022\t\n\005TOPIC\020\003*:\n\014Del"
      "iveryMode\022\016\n\nUNKNOWMODE\020\000\022\r\n\tUNDURABLE\020\001"
      "\022\013\n\007DURABLE\020\002b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 421);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "mq_msg.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_mq_5fmsg_2eproto

const ::google::protobuf::EnumDescriptor* ExchangeType_descriptor() {
  protobuf_mq_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mq_5fmsg_2eproto::file_level_enum_descriptors[0];
}
bool ExchangeType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* DeliveryMode_descriptor() {
  protobuf_mq_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mq_5fmsg_2eproto::file_level_enum_descriptors[1];
}
bool DeliveryMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BasicProperties::kIdFieldNumber;
const int BasicProperties::kDeliveryModeFieldNumber;
const int BasicProperties::kRoutingKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BasicProperties::BasicProperties()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mq_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bitmq.BasicProperties)
}
BasicProperties::BasicProperties(const BasicProperties& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  routing_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.routing_key().size() > 0) {
    routing_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.routing_key_);
  }
  delivery_mode_ = from.delivery_mode_;
  // @@protoc_insertion_point(copy_constructor:bitmq.BasicProperties)
}

void BasicProperties::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  routing_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  delivery_mode_ = 0;
  _cached_size_ = 0;
}

BasicProperties::~BasicProperties() {
  // @@protoc_insertion_point(destructor:bitmq.BasicProperties)
  SharedDtor();
}

void BasicProperties::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  routing_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BasicProperties::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BasicProperties::descriptor() {
  protobuf_mq_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mq_5fmsg_2eproto::file_level_metadata[0].descriptor;
}

const BasicProperties& BasicProperties::default_instance() {
  protobuf_mq_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

BasicProperties* BasicProperties::New(::google::protobuf::Arena* arena) const {
  BasicProperties* n = new BasicProperties;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BasicProperties::Clear() {
// @@protoc_insertion_point(message_clear_start:bitmq.BasicProperties)
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  routing_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  delivery_mode_ = 0;
}

bool BasicProperties::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bitmq.BasicProperties)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bitmq.BasicProperties.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bitmq.DeliveryMode delivery_mode = 2;
      case 2: {
        if (tag == 16u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_delivery_mode(static_cast< ::bitmq::DeliveryMode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string routing_key = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_routing_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->routing_key().data(), this->routing_key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bitmq.BasicProperties.routing_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bitmq.BasicProperties)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bitmq.BasicProperties)
  return false;
#undef DO_
}

void BasicProperties::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bitmq.BasicProperties)
  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bitmq.BasicProperties.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // .bitmq.DeliveryMode delivery_mode = 2;
  if (this->delivery_mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->delivery_mode(), output);
  }

  // string routing_key = 3;
  if (this->routing_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->routing_key().data(), this->routing_key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bitmq.BasicProperties.routing_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->routing_key(), output);
  }

  // @@protoc_insertion_point(serialize_end:bitmq.BasicProperties)
}

::google::protobuf::uint8* BasicProperties::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bitmq.BasicProperties)
  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bitmq.BasicProperties.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // .bitmq.DeliveryMode delivery_mode = 2;
  if (this->delivery_mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->delivery_mode(), target);
  }

  // string routing_key = 3;
  if (this->routing_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->routing_key().data(), this->routing_key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bitmq.BasicProperties.routing_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->routing_key(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bitmq.BasicProperties)
  return target;
}

size_t BasicProperties::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bitmq.BasicProperties)
  size_t total_size = 0;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string routing_key = 3;
  if (this->routing_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->routing_key());
  }

  // .bitmq.DeliveryMode delivery_mode = 2;
  if (this->delivery_mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->delivery_mode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BasicProperties::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bitmq.BasicProperties)
  GOOGLE_DCHECK_NE(&from, this);
  const BasicProperties* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BasicProperties>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bitmq.BasicProperties)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bitmq.BasicProperties)
    MergeFrom(*source);
  }
}

void BasicProperties::MergeFrom(const BasicProperties& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bitmq.BasicProperties)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.routing_key().size() > 0) {

    routing_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.routing_key_);
  }
  if (from.delivery_mode() != 0) {
    set_delivery_mode(from.delivery_mode());
  }
}

void BasicProperties::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bitmq.BasicProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BasicProperties::CopyFrom(const BasicProperties& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bitmq.BasicProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BasicProperties::IsInitialized() const {
  return true;
}

void BasicProperties::Swap(BasicProperties* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BasicProperties::InternalSwap(BasicProperties* other) {
  id_.Swap(&other->id_);
  routing_key_.Swap(&other->routing_key_);
  std::swap(delivery_mode_, other->delivery_mode_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BasicProperties::GetMetadata() const {
  protobuf_mq_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mq_5fmsg_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BasicProperties

// string id = 1;
void BasicProperties::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BasicProperties::id() const {
  // @@protoc_insertion_point(field_get:bitmq.BasicProperties.id)
  return id_.GetNoArena();
}
void BasicProperties::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bitmq.BasicProperties.id)
}
#if LANG_CXX11
void BasicProperties::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bitmq.BasicProperties.id)
}
#endif
void BasicProperties::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bitmq.BasicProperties.id)
}
void BasicProperties::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bitmq.BasicProperties.id)
}
::std::string* BasicProperties::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:bitmq.BasicProperties.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BasicProperties::release_id() {
  // @@protoc_insertion_point(field_release:bitmq.BasicProperties.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BasicProperties::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:bitmq.BasicProperties.id)
}

// .bitmq.DeliveryMode delivery_mode = 2;
void BasicProperties::clear_delivery_mode() {
  delivery_mode_ = 0;
}
::bitmq::DeliveryMode BasicProperties::delivery_mode() const {
  // @@protoc_insertion_point(field_get:bitmq.BasicProperties.delivery_mode)
  return static_cast< ::bitmq::DeliveryMode >(delivery_mode_);
}
void BasicProperties::set_delivery_mode(::bitmq::DeliveryMode value) {
  
  delivery_mode_ = value;
  // @@protoc_insertion_point(field_set:bitmq.BasicProperties.delivery_mode)
}

// string routing_key = 3;
void BasicProperties::clear_routing_key() {
  routing_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BasicProperties::routing_key() const {
  // @@protoc_insertion_point(field_get:bitmq.BasicProperties.routing_key)
  return routing_key_.GetNoArena();
}
void BasicProperties::set_routing_key(const ::std::string& value) {
  
  routing_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bitmq.BasicProperties.routing_key)
}
#if LANG_CXX11
void BasicProperties::set_routing_key(::std::string&& value) {
  
  routing_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bitmq.BasicProperties.routing_key)
}
#endif
void BasicProperties::set_routing_key(const char* value) {
  
  routing_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bitmq.BasicProperties.routing_key)
}
void BasicProperties::set_routing_key(const char* value, size_t size) {
  
  routing_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bitmq.BasicProperties.routing_key)
}
::std::string* BasicProperties::mutable_routing_key() {
  
  // @@protoc_insertion_point(field_mutable:bitmq.BasicProperties.routing_key)
  return routing_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BasicProperties::release_routing_key() {
  // @@protoc_insertion_point(field_release:bitmq.BasicProperties.routing_key)
  
  return routing_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BasicProperties::set_allocated_routing_key(::std::string* routing_key) {
  if (routing_key != NULL) {
    
  } else {
    
  }
  routing_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), routing_key);
  // @@protoc_insertion_point(field_set_allocated:bitmq.BasicProperties.routing_key)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Message_Payload::kPropertiesFieldNumber;
const int Message_Payload::kBodyFieldNumber;
const int Message_Payload::kValidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Message_Payload::Message_Payload()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mq_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bitmq.Message.Payload)
}
Message_Payload::Message_Payload(const Message_Payload& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.body().size() > 0) {
    body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_);
  }
  valid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.valid().size() > 0) {
    valid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.valid_);
  }
  if (from.has_properties()) {
    properties_ = new ::bitmq::BasicProperties(*from.properties_);
  } else {
    properties_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:bitmq.Message.Payload)
}

void Message_Payload::SharedCtor() {
  body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  valid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  properties_ = NULL;
  _cached_size_ = 0;
}

Message_Payload::~Message_Payload() {
  // @@protoc_insertion_point(destructor:bitmq.Message.Payload)
  SharedDtor();
}

void Message_Payload::SharedDtor() {
  body_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  valid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete properties_;
  }
}

void Message_Payload::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Message_Payload::descriptor() {
  protobuf_mq_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mq_5fmsg_2eproto::file_level_metadata[1].descriptor;
}

const Message_Payload& Message_Payload::default_instance() {
  protobuf_mq_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

Message_Payload* Message_Payload::New(::google::protobuf::Arena* arena) const {
  Message_Payload* n = new Message_Payload;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Message_Payload::Clear() {
// @@protoc_insertion_point(message_clear_start:bitmq.Message.Payload)
  body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  valid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && properties_ != NULL) {
    delete properties_;
  }
  properties_ = NULL;
}

bool Message_Payload::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bitmq.Message.Payload)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .bitmq.BasicProperties properties = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_properties()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string body = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_body()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->body().data(), this->body().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bitmq.Message.Payload.body"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string valid = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_valid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->valid().data(), this->valid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bitmq.Message.Payload.valid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bitmq.Message.Payload)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bitmq.Message.Payload)
  return false;
#undef DO_
}

void Message_Payload::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bitmq.Message.Payload)
  // .bitmq.BasicProperties properties = 1;
  if (this->has_properties()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->properties_, output);
  }

  // string body = 2;
  if (this->body().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->body().data(), this->body().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bitmq.Message.Payload.body");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->body(), output);
  }

  // string valid = 3;
  if (this->valid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->valid().data(), this->valid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bitmq.Message.Payload.valid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->valid(), output);
  }

  // @@protoc_insertion_point(serialize_end:bitmq.Message.Payload)
}

::google::protobuf::uint8* Message_Payload::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bitmq.Message.Payload)
  // .bitmq.BasicProperties properties = 1;
  if (this->has_properties()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->properties_, false, target);
  }

  // string body = 2;
  if (this->body().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->body().data(), this->body().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bitmq.Message.Payload.body");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->body(), target);
  }

  // string valid = 3;
  if (this->valid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->valid().data(), this->valid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bitmq.Message.Payload.valid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->valid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bitmq.Message.Payload)
  return target;
}

size_t Message_Payload::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bitmq.Message.Payload)
  size_t total_size = 0;

  // string body = 2;
  if (this->body().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->body());
  }

  // string valid = 3;
  if (this->valid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->valid());
  }

  // .bitmq.BasicProperties properties = 1;
  if (this->has_properties()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->properties_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Message_Payload::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bitmq.Message.Payload)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_Payload* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Message_Payload>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bitmq.Message.Payload)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bitmq.Message.Payload)
    MergeFrom(*source);
  }
}

void Message_Payload::MergeFrom(const Message_Payload& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bitmq.Message.Payload)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.body().size() > 0) {

    body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_);
  }
  if (from.valid().size() > 0) {

    valid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.valid_);
  }
  if (from.has_properties()) {
    mutable_properties()->::bitmq::BasicProperties::MergeFrom(from.properties());
  }
}

void Message_Payload::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bitmq.Message.Payload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_Payload::CopyFrom(const Message_Payload& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bitmq.Message.Payload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_Payload::IsInitialized() const {
  return true;
}

void Message_Payload::Swap(Message_Payload* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Message_Payload::InternalSwap(Message_Payload* other) {
  body_.Swap(&other->body_);
  valid_.Swap(&other->valid_);
  std::swap(properties_, other->properties_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Message_Payload::GetMetadata() const {
  protobuf_mq_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mq_5fmsg_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Message_Payload

// .bitmq.BasicProperties properties = 1;
bool Message_Payload::has_properties() const {
  return this != internal_default_instance() && properties_ != NULL;
}
void Message_Payload::clear_properties() {
  if (GetArenaNoVirtual() == NULL && properties_ != NULL) delete properties_;
  properties_ = NULL;
}
const ::bitmq::BasicProperties& Message_Payload::properties() const {
  // @@protoc_insertion_point(field_get:bitmq.Message.Payload.properties)
  return properties_ != NULL ? *properties_
                         : *::bitmq::BasicProperties::internal_default_instance();
}
::bitmq::BasicProperties* Message_Payload::mutable_properties() {
  
  if (properties_ == NULL) {
    properties_ = new ::bitmq::BasicProperties;
  }
  // @@protoc_insertion_point(field_mutable:bitmq.Message.Payload.properties)
  return properties_;
}
::bitmq::BasicProperties* Message_Payload::release_properties() {
  // @@protoc_insertion_point(field_release:bitmq.Message.Payload.properties)
  
  ::bitmq::BasicProperties* temp = properties_;
  properties_ = NULL;
  return temp;
}
void Message_Payload::set_allocated_properties(::bitmq::BasicProperties* properties) {
  delete properties_;
  properties_ = properties;
  if (properties) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bitmq.Message.Payload.properties)
}

// string body = 2;
void Message_Payload::clear_body() {
  body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Message_Payload::body() const {
  // @@protoc_insertion_point(field_get:bitmq.Message.Payload.body)
  return body_.GetNoArena();
}
void Message_Payload::set_body(const ::std::string& value) {
  
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bitmq.Message.Payload.body)
}
#if LANG_CXX11
void Message_Payload::set_body(::std::string&& value) {
  
  body_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bitmq.Message.Payload.body)
}
#endif
void Message_Payload::set_body(const char* value) {
  
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bitmq.Message.Payload.body)
}
void Message_Payload::set_body(const char* value, size_t size) {
  
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bitmq.Message.Payload.body)
}
::std::string* Message_Payload::mutable_body() {
  
  // @@protoc_insertion_point(field_mutable:bitmq.Message.Payload.body)
  return body_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Message_Payload::release_body() {
  // @@protoc_insertion_point(field_release:bitmq.Message.Payload.body)
  
  return body_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Message_Payload::set_allocated_body(::std::string* body) {
  if (body != NULL) {
    
  } else {
    
  }
  body_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), body);
  // @@protoc_insertion_point(field_set_allocated:bitmq.Message.Payload.body)
}

// string valid = 3;
void Message_Payload::clear_valid() {
  valid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Message_Payload::valid() const {
  // @@protoc_insertion_point(field_get:bitmq.Message.Payload.valid)
  return valid_.GetNoArena();
}
void Message_Payload::set_valid(const ::std::string& value) {
  
  valid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bitmq.Message.Payload.valid)
}
#if LANG_CXX11
void Message_Payload::set_valid(::std::string&& value) {
  
  valid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bitmq.Message.Payload.valid)
}
#endif
void Message_Payload::set_valid(const char* value) {
  
  valid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bitmq.Message.Payload.valid)
}
void Message_Payload::set_valid(const char* value, size_t size) {
  
  valid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bitmq.Message.Payload.valid)
}
::std::string* Message_Payload::mutable_valid() {
  
  // @@protoc_insertion_point(field_mutable:bitmq.Message.Payload.valid)
  return valid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Message_Payload::release_valid() {
  // @@protoc_insertion_point(field_release:bitmq.Message.Payload.valid)
  
  return valid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Message_Payload::set_allocated_valid(::std::string* valid) {
  if (valid != NULL) {
    
  } else {
    
  }
  valid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), valid);
  // @@protoc_insertion_point(field_set_allocated:bitmq.Message.Payload.valid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Message::kPayloadFieldNumber;
const int Message::kOffsetFieldNumber;
const int Message::kLengthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Message::Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mq_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bitmq.Message)
}
Message::Message(const Message& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_payload()) {
    payload_ = new ::bitmq::Message_Payload(*from.payload_);
  } else {
    payload_ = NULL;
  }
  ::memcpy(&offset_, &from.offset_,
    reinterpret_cast<char*>(&length_) -
    reinterpret_cast<char*>(&offset_) + sizeof(length_));
  // @@protoc_insertion_point(copy_constructor:bitmq.Message)
}

void Message::SharedCtor() {
  ::memset(&payload_, 0, reinterpret_cast<char*>(&length_) -
    reinterpret_cast<char*>(&payload_) + sizeof(length_));
  _cached_size_ = 0;
}

Message::~Message() {
  // @@protoc_insertion_point(destructor:bitmq.Message)
  SharedDtor();
}

void Message::SharedDtor() {
  if (this != internal_default_instance()) {
    delete payload_;
  }
}

void Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Message::descriptor() {
  protobuf_mq_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mq_5fmsg_2eproto::file_level_metadata[2].descriptor;
}

const Message& Message::default_instance() {
  protobuf_mq_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

Message* Message::New(::google::protobuf::Arena* arena) const {
  Message* n = new Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Message::Clear() {
// @@protoc_insertion_point(message_clear_start:bitmq.Message)
  if (GetArenaNoVirtual() == NULL && payload_ != NULL) {
    delete payload_;
  }
  payload_ = NULL;
  ::memset(&offset_, 0, reinterpret_cast<char*>(&length_) -
    reinterpret_cast<char*>(&offset_) + sizeof(length_));
}

bool Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bitmq.Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .bitmq.Message.Payload payload = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_payload()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 offset = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 length = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bitmq.Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bitmq.Message)
  return false;
#undef DO_
}

void Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bitmq.Message)
  // .bitmq.Message.Payload payload = 1;
  if (this->has_payload()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->payload_, output);
  }

  // uint32 offset = 2;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->offset(), output);
  }

  // uint32 length = 3;
  if (this->length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->length(), output);
  }

  // @@protoc_insertion_point(serialize_end:bitmq.Message)
}

::google::protobuf::uint8* Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bitmq.Message)
  // .bitmq.Message.Payload payload = 1;
  if (this->has_payload()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->payload_, false, target);
  }

  // uint32 offset = 2;
  if (this->offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->offset(), target);
  }

  // uint32 length = 3;
  if (this->length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->length(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bitmq.Message)
  return target;
}

size_t Message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bitmq.Message)
  size_t total_size = 0;

  // .bitmq.Message.Payload payload = 1;
  if (this->has_payload()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->payload_);
  }

  // uint32 offset = 2;
  if (this->offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->offset());
  }

  // uint32 length = 3;
  if (this->length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->length());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bitmq.Message)
  GOOGLE_DCHECK_NE(&from, this);
  const Message* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bitmq.Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bitmq.Message)
    MergeFrom(*source);
  }
}

void Message::MergeFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bitmq.Message)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_payload()) {
    mutable_payload()->::bitmq::Message_Payload::MergeFrom(from.payload());
  }
  if (from.offset() != 0) {
    set_offset(from.offset());
  }
  if (from.length() != 0) {
    set_length(from.length());
  }
}

void Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bitmq.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message::CopyFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bitmq.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message::IsInitialized() const {
  return true;
}

void Message::Swap(Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Message::InternalSwap(Message* other) {
  std::swap(payload_, other->payload_);
  std::swap(offset_, other->offset_);
  std::swap(length_, other->length_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Message::GetMetadata() const {
  protobuf_mq_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mq_5fmsg_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Message

// .bitmq.Message.Payload payload = 1;
bool Message::has_payload() const {
  return this != internal_default_instance() && payload_ != NULL;
}
void Message::clear_payload() {
  if (GetArenaNoVirtual() == NULL && payload_ != NULL) delete payload_;
  payload_ = NULL;
}
const ::bitmq::Message_Payload& Message::payload() const {
  // @@protoc_insertion_point(field_get:bitmq.Message.payload)
  return payload_ != NULL ? *payload_
                         : *::bitmq::Message_Payload::internal_default_instance();
}
::bitmq::Message_Payload* Message::mutable_payload() {
  
  if (payload_ == NULL) {
    payload_ = new ::bitmq::Message_Payload;
  }
  // @@protoc_insertion_point(field_mutable:bitmq.Message.payload)
  return payload_;
}
::bitmq::Message_Payload* Message::release_payload() {
  // @@protoc_insertion_point(field_release:bitmq.Message.payload)
  
  ::bitmq::Message_Payload* temp = payload_;
  payload_ = NULL;
  return temp;
}
void Message::set_allocated_payload(::bitmq::Message_Payload* payload) {
  delete payload_;
  payload_ = payload;
  if (payload) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bitmq.Message.payload)
}

// uint32 offset = 2;
void Message::clear_offset() {
  offset_ = 0u;
}
::google::protobuf::uint32 Message::offset() const {
  // @@protoc_insertion_point(field_get:bitmq.Message.offset)
  return offset_;
}
void Message::set_offset(::google::protobuf::uint32 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:bitmq.Message.offset)
}

// uint32 length = 3;
void Message::clear_length() {
  length_ = 0u;
}
::google::protobuf::uint32 Message::length() const {
  // @@protoc_insertion_point(field_get:bitmq.Message.length)
  return length_;
}
void Message::set_length(::google::protobuf::uint32 value) {
  
  length_ = value;
  // @@protoc_insertion_point(field_set:bitmq.Message.length)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace bitmq

// @@protoc_insertion_point(global_scope)
